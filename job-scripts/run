#!/bin/bash

# Arguments:
#  1 - job id
#  2 - fits image

set -e

touch $1-symba-log.txt $1.tar.gz

echo "Manually set environmental variables"
export PATH=$PATH:/usr/local/src/casa-**/bin
export PATH=$PATH:/usr/local/src/picard/picard
export PYTHONPATH=$PYTHONPATH:/usr/local/src/picard/picard
export MEQS_DIR=/usr/local/src/MeqSilhouette
export MEQTREES_CATTERY_PATH=//usr/local/src/meqtrees-cattery/Cattery
export PYTHONPATH=$PYTHONPATH:/usr/local/src/MeqSilhouette
export PYTHONPATH=$PYTHONPATH:/usr/local/src/eht-imaging
export PYTHONPATH=$PYTHONPATH:/usr/local/src/symba
export PATH=$PATH:/usr/local/src/symba:$PATH

# also need to unset some env vars which might interfere with casa
unset PE_HOSTFILE

# astropy cache
if [ "x$HOME" = "x" ]; then
    echo "WARN: \$HOME was not defined. Setting it to /srv"
    export HOME=/srv
fi
export ASTROPY_CACHE_DIR=$HOME/.astropy/cache/download/py2
rm -rf $ASTROPY_CACHE_DIR
mkdir -p $ASTROPY_CACHE_DIR

# copy the static IERS files from the singularity container to the current home directory
cp /home/jeanluc/.astropy/cache/download/py2/* $ASTROPY_CACHE_DIR/

# new method of letting symba figure out the input models based on whatever is available
#in the input_models folder
mkdir -p input_models && mv $2 input_models

# handle tarball input
if [[ $2 == *.tar.gz ]]; then
    tar xfz input_models/*.tar.gz --strip-components=1 -C input_models/
fi

# update the input.txt
cp /usr/local/src/symba/master_input.txt master_input.txt
python /usr/local/src/symba/scripts/tableIO.py read -m master_input.txt -f inp.* 2>&1

# scripts created by tableIO.py to align input for symba
chmod +x osg_move_data.sh
./osg_move_data.sh $2
python set_inpim.py

# old method of manually setting the input image
#cat master_input.txt | sed "s/^input_fitsimage.*/input_fitsimage = $2/" >input.txt
mv master_input.txt input.txt

# pre-convert models
# check why this fails at element 33280 inside symba...
python /usr/local/src/symba/symba_modules/conv_txt2fits.py input.txt input_models

echo
echo "Run symba"
mkdir symba_output
RC=0
if ! /usr/local/src/symba/symba input.txt >$1-symba-log.txt 2>&1; then
    RC=1
    # ensure symba finishes all the sub processes
    sleep 2m
fi
tail -n 1000 $1-symba-log.txt

# cleanup with script created by tableIO.py
chmod +x osg_cleanup_data.sh
./osg_cleanup_data.sh

echo
echo "Resulting files:"
ls -l

echo
echo "Resulting files in symba_output:"
ls -l symba_output

# tar it up
tar czf $1.tar.gz symba_output

# clean up
rm -rf $ASTROPY_CACHE_DIR

exit $RC


